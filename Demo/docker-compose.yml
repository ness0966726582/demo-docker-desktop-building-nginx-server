version: '3.9'

services:
  nginx:
    image: nginx:latest
    container_name: demo_nginx
    ports:
      - "8080:80" # 將本地 8080 端口映射到容器內的 80 端口
    volumes:
      - ./nginx/html:/usr/share/nginx/html:ro       # 掛載靜態文件，只讀模式
      - ./nginx/conf.d:/etc/nginx/conf.d:ro         # 掛載自定義 Nginx 配置，只讀模式
    networks:
      - demo_network

  postgres:
    image: postgres:latest
    container_name: demo_postgres
    environment:
      POSTGRES_USER: demo_user       # 設置 PostgreSQL 用戶名
      POSTGRES_PASSWORD: demo_pass   # 設置 PostgreSQL 密碼
      POSTGRES_DB: demo_db           # 設置預設的資料庫名稱
    ports:
      - "5432:5432"                  # 將本地 5432 端口映射到容器內的 5432 端口
    volumes:
      - ./data/postgres:/var/lib/postgresql/data  # 將資料庫資料存放到專案內的 data/postgres 目錄
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro # 初始化 SQL 腳本
      - ./db/functions.sql:/docker-entrypoint-initdb.d/functions.sql:ro

    networks:
      - demo_network

  grafana:
    image: grafana/grafana:latest
    container_name: demo_grafana
    ports:
      - "3000:3000" # 將 Grafana 服務的 3000 端口映射到本地 3000 端口
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana   # 定義 Grafana 的持久化數據卷
    networks:
      - demo_network
    depends_on:
      - postgres

volumes:
  postgres_data:
  grafana_data:

networks:
  demo_network:
